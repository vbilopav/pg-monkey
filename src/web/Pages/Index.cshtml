@page
@{
    Layout = null;
}
@inject Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnv
@addTagHelper "*, Microsoft.AspNetCore.Mvc.TagHelpers"
@{
    var development = hostingEnv.EnvironmentName == "Development";
    var version = "1.0.0.0";
    var culture = "en";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        &#128018;
    </title>
    @if (development)
    {
        <link rel="stylesheet" href="libs/bootstrap/4.0.0/css/bootstrap.css" />
        <link rel="stylesheet" href="libs/font-awesome/4.7.0/css/font-awesome.css">
        <link rel="stylesheet" href="css/default.css">
        <link rel="stylesheet" href="css/layout.css">
        <link rel="stylesheet" href="css/command-bar.css">
    }
    else
    {        
        <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
              asp-fallback-href="libs/bootstrap/4.0.0/css/bootstrap.min.css"
              asp-fallback-test-class="hidden"
              asp-fallback-test-property="visibility"
              asp-fallback-test-value="hidden" />
        <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
              asp-fallback-href="libs/font-awesome/4.7.0/css/font-awesome.min.css"
              asp-fallback-test-class="fa"
              asp-fallback-test-property="font-family"
              asp-fallback-test-value="FontAwesome" />
        <link rel="stylesheet" href="css/default.css?@version">          
    }
    <script type="text/javascript">
        (() => {
            let storage = localStorage;
            window.app = {
                development: @development.ToString().ToLower(),
                culture: '@culture',
                version: '@version',
                user: new class {
                    get leftPanel() { 
                        return storage.leftPanel === undefined ? "100px" : storage.leftPanel 
                    }
                    set leftPanel(value) {
                        storage.leftPanel = value
                    }
                }
            }
            if (app.development) {
                console.log(app);
            }
        })();
    </script>
</head>
<body>
    <div id="loading-screen" style="display: none">
        <span class="fa fa-cog fa-spin"></span>
    </div>
    <script type="text/javascript">            
        (function () {
            setTimeout(function () {
                var e = document.getElementById("loading-screen");
                if (e) e.removeAttribute("style");                   
            }, 250);
        })();            
    </script>

    <div id="app-container" style="display: none">
    </div>
@if (development)
{
    <script type="text/javascript" data-main="app/main.js" src="libs/requirejs/2.3.5/require.js"></script>
}
else
{
    <script type="text/javascript" data-main="app/main.js" src="//cdnjs.cloudflare.com/ajax/libs/require.js/2.3.5/require.min.js"></script>
    <script type="text/javascript">window.requirejs || document.write('<script src="libs/requirejs/require.js">\x3C/script>')</script>
}
</body>
</html>



